# -*- coding: utf-8 -*-
"""streamlit_app.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DtMHwRZxOTRS_D50XcsWv9LK8iyGADJP
"""

import streamlit as st
import pandas as pd
import numpy as np
import pickle
#import sklearn
#from sklearn.ensemble import RandomForestRegressor
from io import BytesIO
#import requests

st.set_page_config(layout="wide")

with open("styles.css") as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)

st.markdown("""
<style>



[data-testid="stHeader"] {
background-color: rgba(0, 0, 0, 0);
}

[data-testid="stSidebar"] {
    background-color: #8EA140;
    textColor = "#000000"
}


</style>
""", unsafe_allow_html=True)


language = st.sidebar.radio('', ['English :flag-us:', 'Português :flag-br:'])
if language == 'English :flag-us:':
    
    st.sidebar.title('**Options**')
    
    pageselected = st.sidebar.selectbox('', ['Home','Potentials prediction'])
    
    
    # Initialize session state variables
    if 'selected_elements' not in st.session_state:
        st.session_state.selected_elements = []
    if 'selected_material' not in st.session_state:
        st.session_state.selected_material = []
    
    if 'sel_material' not in st.session_state:
        st.session_state.sel_material = []
    if 'sel_material' not in st.session_state:
        st.session_state.sel_material = []
    
    
    if 'sel_El_conc' not in st.session_state:
        st.session_state.sel_El_conc = []
    if 'sel_pH' not in st.session_state:
        st.session_state.sel_pH = []
    if 'sel_concentration' not in st.session_state:
        st.session_state.sel_concentration = []
    if 'sel_selec_electrolyte' not in st.session_state:
        st.session_state.sel_selec_electrolyte = []
    if 'sel_option_reference' not in st.session_state:
        st.session_state.sel_option_reference = []
    if 'sel_option_analyte' not in st.session_state:
        st.session_state.sel_option_analyte = []
    
    if pageselected == 'Home' :
        st.image("https://github.com/TWvonZuben/Streamlit/blob/main/caper_cover.png?raw=true")
    
        st.header('Welcome to CAPER!', divider='rainbow')
    
        st.subheader("This tool was created to assist electrochemical scientists in predicting the results of the onset and oxidation potential of the electrooxidation of methanol and ethanol reactions. The work is better explained in the article 'Machine Learning Predictions of Onset and Oxidation Potentials for Methanol and Ethanol Electrooxidation: Comprehensive Analysis and Experimental Validation' and is based on Machine Learning models that utilize information from electrochemical reactions and electrode materials obtained from the literature to predict potentials.")
        st.subheader("The periodic table below illustrates the distribution of chemical elements used in working electrodes, as presented in the database that feeds the model. Consequently, we expect better predictions for materials with more information available in the literature and, consequently, in the database. Additionally, it is more probable that the prediction will be more accurate for methanol oxidation, as 70% of the database information is related to this analyte. The RMSE of the models is 0.169 V for oxidation potentials and 0.185 V for onset potentials.")
    
        st.image("https://github.com/TWvonZuben/Streamlit/blob/main/table.png?raw=true", width=1200)
    
        st.subheader("The initiative aims to aid and accelerate the study and discovery of new electrode materials! If you encounter any problems or have any suggestions, please feel free to contact us at thevonzuben@gmail.com :flag-br:")
        st.subheader("The tools are simple and intuitive to use, but for optimal use and to avoid mistakes, please read the instructions provided below.")
    
        st.header('Instructions', divider='rainbow')
    
        st.subheader(":test_tube: To use the tool, first, select the option 'Potential predictions' on the left sidebar. After that, the options 'Reaction Conditions' and 'Working Electrode descrition' will appear.")
        st.subheader(":test_tube: Under 'Reaction Conditions', you must choose the electrolyte used in the reaction and its concentration. Additionally, select the pH of the solution. Choose the analyte you want to oxidize (methanol or ethanol) and its concentration. Finally, select the reference electrode you are using.")
        st.subheader(":test_tube: The Machine Learning model considers separately the material of the working electrode and the material deposited on it. Thus, under 'Working Electrode description', you must choose the chemical elements used in the 'Working Electrode material' and the chemical elements used in the 'Deposited material', selecting the elements from the periodic table.")
        st.subheader(":eyes: If you want to clear all selected elements from the Periodic Table, simply click on 'Reset' in the bottom right corner.")
        st.subheader(":eyes: In the case of Nitrogen (N) and Carbon (C), options to be chosen will appear on the right side after selecting these elements.")
    
        st.subheader(":red[Attention!] If there is any material deposited on the Working Electrode, please complete the 'Deposited material' field with the same information that you provided for the 'Working Electrode material'.")
    
    if pageselected == 'Potentials prediction':
    
        parameters_selection = st.sidebar.radio('', ['Reactions conditions', 'Working Electrode descrition'])
    
        if parameters_selection == 'Reactions conditions':
    
            st.header('Potentials prediction', divider='rainbow')
            st.subheader('Choose the parameters used')
    
            options_electrolyte = 'KOH', 'NaOH', 'KNO₃', 'phosphate', 'H₂SO₄', 'HClO₄', 'HCl', 'Other'
            st.session_state.sel_selec_electrolyte = st.selectbox('**Select the :red[electrolyte]**', options_electrolyte)
    
            st.session_state.sel_El_conc = st.number_input('**Enter the :red[electrolyte concentration] value (mol/L)**:',
                                      min_value=0.001, max_value=10.000, value=1.000, step=0.001, format="%.3f")
            
            st.session_state.sel_pH = st.slider('**Select the :red[pH] value**', min_value=0.0, max_value=14.0, value=7.0, step=0.1)
    
            options_analyte = ['Methanol', 'Ethanol']
            st.session_state.sel_option_analyte = st.selectbox('**Select the :red[analyte]**', options_analyte)
    
            st.session_state.sel_concentration = st.number_input('**Enter the value of the :red[analyte concentration] (mol/L)**:', min_value=0.001, max_value=10.000, value=1.000, step=0.001,  format="%.3f")
    
            options_reference = ['RHE', 'SCE', 'NHE', 'SHE','Ag/AgCl', 'Hg/HgO', 'MMS', 'MMO', 'Other']
            st.session_state.sel_option_reference = st.selectbox('**Select the :red[Reference Electrode]**', options_reference)
    
    
        st.sidebar.subheader('Selected information:')
    
        conc_formatted = "{:.3f}".format(max(st.session_state.sel_El_conc, 0.001))
        st.sidebar.write(f'**Electrolyte:** {st.session_state.sel_selec_electrolyte} ({conc_formatted} mol/L)')
    
        st.sidebar.write(f'**pH:** {st.session_state.sel_pH}')
    
        conc_formatted_ = "{:.3f}".format(max(st.session_state.sel_concentration, 0.001))
        st.sidebar.write(f'**Analyte:** {st.session_state.sel_option_analyte} ({conc_formatted_} mol/L)')
        st.sidebar.write(f'**Reference electrode:** {st.session_state.sel_option_reference}')
    
        if parameters_selection == 'Working Electrode descrition':
    
            st.header('Working Electrode descrition', divider='rainbow')
    
            options_WE = ['Working Electrode material', 'Material deposited']
            selected_option_WE = st.selectbox('',options_WE)
    
            if 'selected_carbon' not in st.session_state:
                  st.session_state.selected_carbon = []
    
            if 'selected_carbon_2' not in st.session_state:
                  st.session_state.selected_carbon_2 = []
    
    
            if selected_option_WE == 'Working Electrode material':
    
                st.subheader('Describe the :red[material of the Working Electrode] on the selection of elements from the Periodic Table')
    
                col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12, col13, col14, col15, col16, col17, col18, col19, col20 = st.columns([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6])
    
                if 'selected_elements' not in st.session_state:
                  st.session_state.selected_elements = []
    
                with col1:
                  option_H = st.button('H')
                  if option_H :
                    st.session_state.selected_elements.append('H')
    
                  option_Li = st.button('Li')
                  if option_Li :
                    st.session_state.selected_elements.append('Li')
    
                  option_Na = st.button('Na')
                  if option_Na :
                    st.session_state.selected_elements.append('Na')
    
                  option_K = st.button('K')
                  if option_K :
                    st.session_state.selected_elements.append('K')
    
                  option_Rb = st.button('Rb')
                  if option_Rb :
                    st.session_state.selected_elements.append('Rb')
    
                  option_Cs = st.button('Cs')
                  if option_Cs :
                    st.session_state.selected_elements.append('Cs')
    
                  option_Fr = st.button('Fr')
                  if option_Fr :
                    st.session_state.selected_elements.append('Fr')
    
                with col2:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Be = st.button('Be')
                  if option_Be :
                    st.session_state.selected_elements.append('Be')
    
                  option_Mg = st.button('Mg')
                  if option_Mg :
                    st.session_state.selected_elements.append('Mg')
    
                  option_Ca = st.button('Ca')
                  if option_Ca :
                    st.session_state.selected_elements.append('Ca')
    
                  option_Sr = st.button('Sr')
                  if option_Sr :
                    st.session_state.selected_elements.append('Sr')
    
                  option_Ba = st.button('Ba')
                  if option_Ba :
                    st.session_state.selected_elements.append('Ba')
    
                  option_Ra = st.button('Ra')
                  if option_Ra :
                    st.session_state.selected_elements.append('Ra')
    
                with col3:
    
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Sc = st.button('Sc')
                  if option_Sc :
                    st.session_state.selected_elements.append('Sc')
    
                  option_Y = st.button('Y')
                  if option_Y :
                    st.session_state.selected_elements.append('Y')
    
                  option_La = st.button('La')
                  if option_La :
                    st.session_state.selected_elements.append('La')
    
                  option_Ac = st.button('Ac')
                  if option_Ac :
                    st.session_state.selected_elements.append('Ac')
    
                with col4:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Ti = st.button('Ti')
                  if option_Ti :
                    st.session_state.selected_elements.append('Ti')
    
                  option_Zr = st.button('Zr')
                  if option_Zr :
                    st.session_state.selected_elements.append('Zr')
    
                  option_Hf = st.button('Hf')
                  if option_Hf :
                    st.session_state.selected_elements.append('Hf')
    
                  option_Rf = st.button('Rf')
                  if option_Rf :
                    st.session_state.selected_elements.append('Rf')
    
                with col5:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_V = st.button('V')
                  if option_V :
                    st.session_state.selected_elements.append('V')
    
                  option_Nb = st.button('Nb')
                  if option_Nb :
                    st.session_state.selected_elements.append('Nb')
    
                  option_Ta = st.button('Ta')
                  if option_Ta :
                    st.session_state.selected_elements.append('Ta')
    
                  option_Db = st.button('Db')
                  if option_Db :
                    st.session_state.selected_elements.append('Db')
    
                with col6:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Cr = st.button('Cr')
                  if option_Cr :
                    st.session_state.selected_elements.append('Cr')
    
                  option_Mo = st.button('Mo')
                  if option_Mo :
                    st.session_state.selected_elements.append('Mo')
    
                  option_W = st.button('W')
                  if option_W :
                    st.session_state.selected_elements.append('W')
    
                  option_Sg = st.button('Sg')
                  if option_Sg :
                    st.session_state.selected_elements.append('Sg')
    
                with col7:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Mn = st.button('Mn')
                  if option_Mn :
                    st.session_state.selected_elements.append('Mn')
    
                  option_Tc = st.button('Tc')
                  if option_Tc :
                    st.session_state.selected_elements.append('Tc')
    
                  option_Re = st.button('Re')
                  if option_Re :
                    st.session_state.selected_elements.append('Re')
    
                  option_Bh = st.button('Bh')
                  if option_Bh :
                    st.session_state.selected_elements.append('Bh')
    
                with col8:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Fe = st.button('Fe')
                  if option_Fe :
                    st.session_state.selected_elements.append('Fe')
    
                  option_Ru = st.button('Ru')
                  if option_Ru :
                    st.session_state.selected_elements.append('Ru')
    
                  option_Os = st.button('Os')
                  if option_Os :
                    st.session_state.selected_elements.append('Os')
    
                  option_Hs = st.button('Hs')
                  if option_Hs :
                    st.session_state.selected_elements.append('Hs')
    
                with col9:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Co = st.button('Co')
                  if option_Co:
                    st.session_state.selected_elements.append('Co')
    
                  option_Rh = st.button('Rh')
                  if option_Rh :
                    st.session_state.selected_elements.append('Rh')
    
                  option_Ir = st.button('Ir')
                  if option_Ir :
                    st.session_state.selected_elements.append('Ir')
    
                  option_Mt = st.button('Mt')
                  if option_Mt :
                    st.session_state.selected_elements.append('Mt')
    
                with col10:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Ni = st.button('Ni')
                  if option_Ni :
                    st.session_state.selected_elements.append('Ni')
    
                  option_Pd = st.button('Pd')
                  if option_Pd :
                    st.session_state.selected_elements.append('Pd')
    
                  option_Pt = st.button('Pt')
                  if option_Pt :
                    st.session_state.selected_elements.append('Pt')
    
                  option_Ds = st.button('Ds')
                  if option_Ds :
                    st.session_state.selected_elements.append('Ds')
    
                with col11:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Cu = st.button('Cu')
                  if option_Cu :
                    st.session_state.selected_elements.append('Cu')
    
                  option_Ag = st.button('Ag')
                  if option_Ag :
                    st.session_state.selected_elements.append('Ag')
    
                  option_Au = st.button('Au')
                  if option_Au :
                    st.session_state.selected_elements.append('Au')
    
                  option_Rg = st.button('Rg')
                  if option_Rg :
                    st.session_state.selected_elements.append('Rg')
    
                with col12:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Zn= st.button('Zn')
                  if option_Zn :
                    st.session_state.selected_elements.append('Zn')
    
                  option_Cd = st.button('Cd')
                  if option_Cd :
                    st.session_state.selected_elements.append('Cd')
    
                  option_Hg = st.button('Hg')
                  if option_Hg :
                    st.session_state.selected_elements.append('Hg')
    
                  option_Cn = st.button('Cn')
                  if option_Cn :
                    st.session_state.selected_elements.append('Cn')
    
    
                with col13:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_B = st.button('B')
                  if option_B :
                    st.session_state.selected_elements.append('B')
    
                  option_Al = st.button('Al')
                  if option_Al :
                    st.session_state.selected_elements.append('Al')
    
                  option_Ga = st.button('Ga')
                  if option_Ga :
                    st.session_state.selected_elements.append('Ga')
    
                  option_In = st.button('In')
                  if option_In :
                    st.session_state.selected_elements.append('In')
    
                  option_Tl = st.button('Tl')
                  if option_Tl :
                    st.session_state.selected_elements.append('Tl')
    
                  option_Nh = st.button('Nh')
                  if option_Nh :
                    st.session_state.selected_elements.append('Nh')
    
    
                with col14:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_C = st.button('C')
                  if option_C :
    
                    st.session_state.selected_carbon.append('C')
    
                  option_Si = st.button('Si')
                  if option_Si :
                    st.session_state.selected_elements.append('Si')
    
                  option_Ge = st.button('Ge')
                  if option_Ge :
                    st.session_state.selected_elements.append('Ge')
    
                  option_Sn = st.button('Sn')
                  if option_Sn :
                    st.session_state.selected_elements.append('Sn')
    
                  option_Pb = st.button('Pb')
                  if option_Pb :
                    st.session_state.selected_elements.append('Pb')
    
                  option_Fl = st.button('Fl')
                  if option_Fl :
                    st.session_state.selected_elements.append('Fl')
    
                with col15:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_N = st.button('N')
                  if option_N :
                    st.session_state.selected_carbon.append('N')
    
                  option_P = st.button('P')
                  if option_P :
                    st.session_state.selected_elements.append('P')
    
                  option_As = st.button('As')
                  if option_As :
                    st.session_state.selected_elements.append('As')
    
                  option_Sb = st.button('Sb')
                  if option_Sb :
                    st.session_state.selected_elements.append('Sb')
    
                  option_Bi = st.button('Bi')
                  if option_Bi :
                    st.session_state.selected_elements.append('Bi')
    
                  option_Mc = st.button('Mc')
                  if option_Mc :
                    st.session_state.selected_elements.append('Mc')
    
                with col16:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_O = st.button('O')
                  if option_O :
                    st.session_state.selected_elements.append('O')
    
                  option_S = st.button('S')
                  if option_S :
                    st.session_state.selected_elements.append('S')
    
                  option_Se = st.button('Se')
                  if option_Se :
                    st.session_state.selected_elements.append('Se')
    
                  option_Te = st.button('Te')
                  if option_Te :
                    st.session_state.selected_elements.append('Te')
    
                  option_Po = st.button('Po')
                  if option_Po :
                    st.session_state.selected_elements.append('Po')
    
                  option_Lv = st.button('Lv')
                  if option_Lv :
                    st.session_state.selected_elements.append('Lv')
    
    
                with col17:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_F = st.button('F')
                  if option_F :
                    st.session_state.selected_elements.append('F')
    
                  option_Cl = st.button('Cl')
                  if option_Cl :
                    st.session_state.selected_elements.append('Cl')
    
                  option_Br = st.button('Br')
                  if option_Br :
                    st.session_state.selected_elements.append('Br')
    
                  option_I = st.button('I')
                  if option_I :
                    st.session_state.selected_elements.append('I')
    
                  option_At = st.button('At')
                  if option_At :
                    st.session_state.selected_elements.append('At')
    
                  option_Ts = st.button('Ts')
                  if option_Ts :
                    st.session_state.selected_elements.append('Ts')
    
                with col18:
                  option_He = st.button('He')
                  if option_He :
                    st.session_state.selected_elements.append('He')
    
                  option_Ne = st.button('Ne')
                  if option_Ne :
                    st.session_state.selected_elements.append('Ne')
    
                  option_Ar = st.button('Ar')
                  if option_Ar :
                    st.session_state.selected_elements.append('Ar')
    
                  option_Kr = st.button('Kr')
                  if option_Kr :
                    st.session_state.selected_elements.append('Kr')
    
                  option_Xe = st.button('Xe')
                  if option_Xe :
                    st.session_state.selected_elements.append('Xe')
    
                  option_Rn = st.button('Rn')
                  if option_Rh :
                    st.session_state.selected_elements.append('Rh')
    
                  option_Og = st.button('Og')
                  if option_Og :
                    st.session_state.selected_elements.append('Og')
    
                with col5:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Ce = st.button('Ce')
                  if option_Ce :
                    st.session_state.selected_elements.append('Ce')
    
                  option_Th = st.button('Th')
                  if option_Th :
                    st.session_state.selected_elements.append('Th')
    
    
                with col6:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Pr = st.button('Pr')
                  if option_Pr :
                    st.session_state.selected_elements.append('Pr')
    
                  option_Pa = st.button('Pa')
                  if option_Pa :
                    st.session_state.selected_elements.append('Pa')
    
                with col7:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Nd = st.button('Nd')
                  if option_Nd :
                    st.session_state.selected_elements.append('Nd')
    
                  option_U = st.button('U')
                  if option_U :
                    st.session_state.selected_elements.append('U')
    
                with col8:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Pm = st.button('Pm')
                  if option_Fr :
                    st.session_state.selected_elements.append('Fr')
    
                  option_Np = st.button('Np')
                  if option_Np :
                    st.session_state.selected_elements.append('Np')
    
                with col9:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Sm = st.button('Sm')
                  if option_Sm :
                    st.session_state.selected_elements.append('Sm')
    
                  option_Pu = st.button('Pu')
                  if option_Pu :
                    st.session_state.selected_elements.append('Pu')
    
                with col10:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Eu = st.button('Eu')
                  if option_Eu :
                    st.session_state.selected_elements.append('Eu')
    
                  option_Am = st.button('Am')
                  if option_Am :
                    st.session_state.selected_elements.append('Am')
    
                with col11:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Gd = st.button('Gd')
                  if option_Gd :
                    st.session_state.selected_elements.append('Gd')
    
                  option_Cm = st.button('Cm')
                  if option_Cm :
                    st.session_state.selected_elements.append('Cm')
    
                with col12:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Tb = st.button('Tb')
                  if option_Tb :
                    st.session_state.selected_elements.append('Tb')
    
                  option_Bk = st.button('Bk')
                  if option_Bk :
                    st.session_state.selected_elements.append('Bk')
    
                with col13:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Dy = st.button('Dy')
                  if option_Dy :
                    st.session_state.selected_elements.append('Dy')
    
                  option_Cf = st.button('Cf')
                  if option_Cf :
                    st.session_state.selected_elements.append('Cf')
    
    
                with col14:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Ho = st.button('Ho')
                  if option_Ho :
                    st.session_state.selected_elements.append('Ho')
    
                  option_Es = st.button('Es')
                  if option_Es :
                    st.session_state.selected_elements.append('Es')
    
                with col15:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Er= st.button('Er')
                  if option_Er :
                    st.session_state.selected_elements.append('Er')
    
                  option_Fm = st.button('Fm')
                  if option_Fm :
                    st.session_state.selected_elements.append('Fm')
    
                with col16:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Tm = st.button('Tm')
                  if option_Tm :
                    st.session_state.selected_elements.append('Tm')
    
                  option_Md = st.button('Md')
                  if option_Md :
                    st.session_state.selected_elements.append('Md')
    
                with col17:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Yb = st.button('Yb')
                  if option_Yb :
                    st.session_state.selected_elements.append('Yb')
    
                  option_No = st.button('No')
                  if option_No :
                    st.session_state.selected_elements.append('No')
    
                with col18:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Lu = st.button('Lu')
                  if option_Lu :
                    st.session_state.selected_elements.append('Lu')
    
                  option_Lr = st.button('Lr')
                  if option_Lr :
                    st.session_state.selected_elements.append('Lr')
    
                  st.markdown("<div style='height: 100px;'></div>", unsafe_allow_html=True)
                  if st.button('Reset'):
                    st.session_state.selected_elements = []
    
                with col20:
    
                  if 'C' in st.session_state.selected_carbon:
    
                    st.write('**Selected the type of the carbon:**')
                    selected_carbon_options = st.multiselect('**Options:**',
                    ['Graphite', 'Glass Carbon Electrode (GCE)', 'Graphene (G)', 'Graphene Oxide (GO)', 'Graphene Oxide Reduced (RGO)', 'Other', 'Polymer']
                    )
                    st.markdown("<div style='height: 250px;'></div>", unsafe_allow_html=True)
                    if st.button('Done'):
                      st.session_state.selected_elements.extend(selected_carbon_options)
    
                with col20:
    
                  if 'N' in st.session_state.selected_carbon:
                    st.write('**Is :red[Aniline] present in the material of the Working Electrode?**')
                    option_yes = st.button('Present')
                    option_nein = st.button('Absent')
                    if option_yes :
                      st.session_state.selected_elements.append('Aniline')
                    if option_nein :
                      st.session_state.selected_elements.append('N')
    
            if selected_option_WE == 'Material deposited':
    
                st.subheader('Describe the :red[material deposited] on the working electrode based on the selection of elements from the Periodic Table')
    
                col1, col2, col3, col4, col5, col6, col7, col8, col9, col10, col11, col12, col13, col14, col15, col16, col17, col18, col19, col20 = st.columns([1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,6])
    
                if 'selected_material' not in st.session_state:
                  st.session_state.selected_material = []
    
                with col1:
                  option_H = st.button('H')
                  if option_H :
                    st.session_state.selected_material.append('H')
    
                  option_Li = st.button('Li')
                  if option_Li :
                    st.session_state.selected_material.append('Li')
    
                  option_Na = st.button('Na')
                  if option_Na :
                    st.session_state.selected_material.append('Na')
    
                  option_K = st.button('K')
                  if option_K :
                    st.session_state.selected_material.append('K')
    
                  option_Rb = st.button('Rb')
                  if option_Rb :
                    st.session_state.selected_material.append('Rb')
    
                  option_Cs = st.button('Cs')
                  if option_Cs :
                    st.session_state.selected_material.append('Cs')
    
                  option_Fr = st.button('Fr')
                  if option_Fr :
                    st.session_state.selected_material.append('Fr')
    
                with col2:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Be = st.button('Be')
                  if option_Be :
                    st.session_state.selected_material.append('Be')
    
                  option_Mg = st.button('Mg')
                  if option_Mg :
                    st.session_state.selected_material.append('Mg')
    
                  option_Ca = st.button('Ca')
                  if option_Ca :
                    st.session_state.selected_material.append('Ca')
    
                  option_Sr = st.button('Sr')
                  if option_Sr :
                    st.session_state.selected_material.append('Sr')
    
                  option_Ba = st.button('Ba')
                  if option_Ba :
                    st.session_state.selected_material.append('Ba')
    
                  option_Ra = st.button('Ra')
                  if option_Ra :
                    st.session_state.selected_material.append('Ra')
    
                with col3:
    
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Sc = st.button('Sc')
                  if option_Sc :
                    st.session_state.selected_material.append('Sc')
    
                  option_Y = st.button('Y')
                  if option_Y :
                    st.session_state.selected_material.append('Y')
    
                  option_La = st.button('La')
                  if option_La :
                    st.session_state.selected_material.append('La')
    
                  option_Ac = st.button('Ac')
                  if option_Ac :
                    st.session_state.selected_material.append('Ac')
    
    
                with col4:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Ti = st.button('Ti')
                  if option_Ti :
                    st.session_state.selected_material.append('Ti')
    
                  option_Zr = st.button('Zr')
                  if option_Zr :
                    st.session_state.selected_material.append('Zr')
    
                  option_Hf = st.button('Hf')
                  if option_Hf :
                    st.session_state.selected_material.append('Hf')
    
                  option_Rf = st.button('Rf')
                  if option_Rf :
                    st.session_state.selected_material.append('Rf')
    
                with col5:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_V = st.button('V')
                  if option_V :
                    st.session_state.selected_material.append('V')
    
                  option_Nb = st.button('Nb')
                  if option_Nb :
                    st.session_state.selected_material.append('Nb')
    
                  option_Ta = st.button('Ta')
                  if option_Ta :
                    st.session_state.selected_material.append('Ta')
    
                  option_Db = st.button('Db')
                  if option_Db :
                    st.session_state.selected_material.append('Db')
    
                with col6:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Cr = st.button('Cr')
                  if option_Cr :
                    st.session_state.selected_material.append('Cr')
    
                  option_Mo = st.button('Mo')
                  if option_Mo :
                    st.session_state.selected_material.append('Mo')
    
                  option_W = st.button('W')
                  if option_W :
                    st.session_state.selected_material.append('W')
    
                  option_Sg = st.button('Sg')
                  if option_Sg :
                    st.session_state.selected_material.append('Sg')
    
                with col7:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Mn = st.button('Mn')
                  if option_Mn :
                    st.session_state.selected_material.append('Mn')
    
                  option_Tc = st.button('Tc')
                  if option_Tc :
                    st.session_state.selected_material.append('Tc')
    
                  option_Re = st.button('Re')
                  if option_Re :
                    st.session_state.selected_material.append('Re')
    
                  option_Bh = st.button('Bh')
                  if option_Bh :
                    st.session_state.selected_material.append('Bh')
    
                with col8:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Fe = st.button('Fe')
                  if option_Fe :
                    st.session_state.selected_material.append('Fe')
    
                  option_Ru = st.button('Ru')
                  if option_Ru :
                    st.session_state.selected_material.append('Ru')
    
                  option_Os = st.button('Os')
                  if option_Os :
                    st.session_state.selected_material.append('Os')
    
                  option_Hs = st.button('Hs')
                  if option_Hs :
                    st.session_state.selected_material.append('Hs')
    
                with col9:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Co = st.button('Co')
                  if option_Co:
                    st.session_state.selected_material.append('Co')
    
                  option_Rh = st.button('Rh')
                  if option_Rh :
                    st.session_state.selected_material.append('Rh')
    
                  option_Ir = st.button('Ir')
                  if option_Ir :
                    st.session_state.selected_material.append('Ir')
    
                  option_Mt = st.button('Mt')
                  if option_Mt :
                    st.session_state.selected_material.append('Mt')
    
                with col10:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Ni = st.button('Ni')
                  if option_Ni :
                    st.session_state.selected_material.append('Ni')
    
                  option_Pd = st.button('Pd')
                  if option_Pd :
                    st.session_state.selected_material.append('Pd')
    
                  option_Pt = st.button('Pt')
                  if option_Pt :
                    st.session_state.selected_material.append('Pt')
    
                  option_Ds = st.button('Ds')
                  if option_Ds :
                    st.session_state.selected_material.append('Ds')
    
                with col11:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Cu = st.button('Cu')
                  if option_Cu :
                    st.session_state.selected_material.append('Cu')
    
                  option_Ag = st.button('Ag')
                  if option_Ag :
                    st.session_state.selected_material.append('Ag')
    
                  option_Au = st.button('Au')
                  if option_Au :
                    st.session_state.selected_material.append('Au')
    
                  option_Rg = st.button('Rg')
                  if option_Rg :
                    st.session_state.selected_material.append('Rg')
    
                with col12:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_Zn= st.button('Zn')
                  if option_Zn :
                    st.session_state.selected_material.append('Zn')
    
                  option_Cd = st.button('Cd')
                  if option_Cd :
                    st.session_state.selected_material.append('Cd')
    
                  option_Hg = st.button('Hg')
                  if option_Hg :
                    st.session_state.selected_material.append('Hg')
    
                  option_Cn = st.button('Cn')
                  if option_Cn :
                    st.session_state.selected_material.append('Cn')
    
    
                with col13:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_B = st.button('B')
                  if option_B :
                    st.session_state.selected_material.append('B')
    
                  option_Al = st.button('Al')
                  if option_Al :
                    st.session_state.selected_material.append('Al')
    
                  option_Ga = st.button('Ga')
                  if option_Ga :
                    st.session_state.selected_material.append('Ga')
    
                  option_In = st.button('In')
                  if option_In :
                    st.session_state.selected_material.append('In')
    
                  option_Tl = st.button('Tl')
                  if option_Tl :
                    st.session_state.selected_material.append('Tl')
    
                  option_Nh = st.button('Nh')
                  if option_Nh :
                    st.session_state.selected_material.append('Nh')
    
    
                with col14:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_C = st.button('C')
                  if option_C :
                    st.session_state.selected_carbon_2.append('C')
    
                  option_Si = st.button('Si')
                  if option_Si :
                    st.session_state.selected_material.append('Si')
    
                  option_Ge = st.button('Ge')
                  if option_Ge :
                    st.session_state.selected_material.append('Ge')
    
                  option_Sn = st.button('Sn')
                  if option_Sn :
                    st.session_state.selected_material.append('Sn')
    
                  option_Pb = st.button('Pb')
                  if option_Pb :
                    st.session_state.selected_material.append('Pb')
    
                  option_Fl = st.button('Fl')
                  if option_Fl :
                    st.session_state.selected_material.append('Fl')
    
                with col15:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_N = st.button('N')
                  if option_N :
                    st.session_state.selected_carbon_2.append('N')
    
                  option_P = st.button('P')
                  if option_P :
                    st.session_state.selected_material.append('P')
    
                  option_As = st.button('As')
                  if option_As :
                    st.session_state.selected_material.append('As')
    
                  option_Sb = st.button('Sb')
                  if option_Sb :
                    st.session_state.selected_material.append('Sb')
    
                  option_Bi = st.button('Bi')
                  if option_Bi :
                    st.session_state.selected_material.append('Bi')
    
                  option_Mc = st.button('Mc')
                  if option_Mc :
                    st.session_state.selected_material.append('Mc')
    
                with col16:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_O = st.button('O')
                  if option_O :
                    st.session_state.selected_material.append('O')
    
                  option_S = st.button('S')
                  if option_S :
                    st.session_state.selected_material.append('S')
    
                  option_Se = st.button('Se')
                  if option_Se :
                    st.session_state.selected_material.append('Se')
    
                  option_Te = st.button('Te')
                  if option_Te :
                    st.session_state.selected_material.append('TE')
    
                  option_Po = st.button('Po')
                  if option_Po :
                    st.session_state.selected_material.append('Po')
    
                  option_Lv = st.button('Lv')
                  if option_Lv :
                    st.session_state.selected_material.append('Lv')
    
    
                with col17:
                  st.markdown("<div style='height: 66px;'></div>", unsafe_allow_html=True)
                  option_F = st.button('F')
                  if option_F :
                    st.session_state.selected_material.append('F')
    
                  option_Cl = st.button('Cl')
                  if option_Cl :
                    st.session_state.selected_material.append('Cl')
    
                  option_Br = st.button('Br')
                  if option_Br :
                    st.session_state.selected_material.append('Br')
    
                  option_I = st.button('I')
                  if option_I :
                    st.session_state.selected_material.append('I')
    
                  option_At = st.button('At')
                  if option_At :
                    st.session_state.selected_material.append('At')
    
                  option_Ts = st.button('Ts')
                  if option_Ts :
                    st.session_state.selected_material.append('Ts')
    
                with col18:
                  option_He = st.button('He')
                  if option_He :
                    st.session_state.selected_material.append('He')
    
                  option_Ne = st.button('Ne')
                  if option_Ne :
                    st.session_state.selected_material.append('Ne')
    
                  option_Ar = st.button('Ar')
                  if option_Ar :
                    st.session_state.selected_material.append('Ar')
    
                  option_Kr = st.button('Kr')
                  if option_Kr :
                    st.session_state.selected_material.append('Kr')
    
                  option_Xe = st.button('Xe')
                  if option_Xe :
                    st.session_state.selected_material.append('Xe')
    
                  option_Rn = st.button('Rn')
                  if option_Rh :
                    st.session_state.selected_material.append('Rh')
    
                  option_Og = st.button('Og')
                  if option_Og :
                    st.session_state.selected_material.append('Og')
    
    
                with col5:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Ce = st.button('Ce')
                  if option_Ce :
                    st.session_state.selected_material.append('Ce')
    
                  option_Th = st.button('Th')
                  if option_Th :
                    st.session_state.selected_material.append('Th')
    
    
                with col6:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Pr = st.button('Pr')
                  if option_Pr :
                    st.session_state.selected_material.append('Pr')
    
                  option_Pa = st.button('Pa')
                  if option_Pa :
                    st.session_state.selected_material.append('Pa')
    
                with col7:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Nd = st.button('Nd')
                  if option_Nd :
                    st.session_state.selected_material.append('Nd')
    
                  option_U = st.button('U')
                  if option_U :
                    st.session_state.selected_material.append('U')
    
                with col8:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Pm = st.button('Pm')
                  if option_Fr :
                    st.session_state.selected_material.append('Fr')
    
                  option_Np = st.button('Np')
                  if option_Np :
                    st.session_state.selected_material.append('Np')
    
                with col9:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Sm = st.button('Sm')
                  if option_Sm :
                    st.session_state.selected_material.append('Sm')
    
                  option_Pu = st.button('Pu')
                  if option_Pu :
                    st.session_state.selected_material.append('Pu')
    
                with col10:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Eu = st.button('Eu')
                  if option_Eu :
                    st.session_state.selected_material.append('Eu')
    
                  option_Am = st.button('Am')
                  if option_Am :
                    st.session_state.selected_material.append('Am')
    
                with col11:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Gd = st.button('Gd')
                  if option_Gd :
                    st.session_state.selected_material.append('Gd')
    
                  option_Cm = st.button('Cm')
                  if option_Cm :
                    st.session_state.selected_material.append('Cm')
    
                with col12:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Tb = st.button('Tb')
                  if option_Tb :
                    st.session_state.selected_material.append('Tb')
    
                  option_Bk = st.button('Bk')
                  if option_Bk :
                    st.session_state.selected_material.append('Bk')
    
                with col13:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Dy = st.button('Dy')
                  if option_Dy :
                    st.session_state.selected_material.append('Dy')
    
                  option_Cf = st.button('Cf')
                  if option_Cf :
                    st.session_state.selected_material.append('Cf')
    
    
                with col14:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Ho = st.button('Ho')
                  if option_Ho :
                    st.session_state.selected_material.append('Ho')
    
                  option_Es = st.button('Es')
                  if option_Es :
                    st.session_state.selected_material.append('Es')
    
                with col15:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Er= st.button('Er')
                  if option_Er :
                    st.session_state.selected_material.append('Er')
    
                  option_Fm = st.button('Fm')
                  if option_Fm :
                    st.session_state.selected_material.append('Fm')
    
                with col16:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Tm = st.button('Tm')
                  if option_Tm :
                    st.session_state.selected_material.append('Tm')
    
                  option_Md = st.button('Md')
                  if option_Md :
                    st.session_state.selected_material.append('Md')
    
                with col17:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Yb = st.button('Yb')
                  if option_Yb :
                    st.session_state.selected_material.append('Yb')
    
                  option_No = st.button('No')
                  if option_No :
                    st.session_state.selected_material.append('No')
    
                with col18:
                  st.markdown("<div style='height: 50px;'></div>", unsafe_allow_html=True)
                  option_Lu = st.button('Lu')
                  if option_Lu :
                    st.session_state.selected_material.append('Lu')
    
                  option_Lr = st.button('Lr')
                  if option_Lr :
                    st.session_state.selected_material.append('Lr')
                  st.markdown("<div style='height: 87px;'></div>", unsafe_allow_html=True)
                  if st.button('Reset'):
                    st.session_state.selected_material = []
    
    
                with col20:
    
                  if 'C' in st.session_state.selected_carbon_2:
    
                    st.write('**Selected the type of the carbon:**')
                    selected_carbon_options = st.multiselect('**Options:**',
                    ['Carbon nanotube (CNT)', 'Organic', 'Graphene (G)', 'Polymer', 'Other']
                    )
                    st.markdown("<div style='height: 250px;'></div>", unsafe_allow_html=True)
                    if st.button('Done'):
                      st.session_state.selected_material.extend(selected_carbon_options)
    
                  if 'N' in st.session_state.selected_carbon_2:
                    st.write('**Is :red[Aniline] present in the material of the Working Electrode?**')
    
                    option_yes = st.button('Present')
                    option_nein = st.button('Absent')
    
                    if option_yes :
                      st.session_state.selected_material.append('Aniline')
                    if option_nein :
                      st.session_state.selected_material.append('N')
    
        st.sidebar.write(f'**Working Electrode material:** {", ".join(st.session_state.selected_elements)}')
        st.sidebar.write(f'**Depoisted material:** {", ".join(st.session_state.selected_material)}')
    
        X_oxidation = ['W-carbons','carbons','C', 'Org', 'W-graphite','W-C', 'W-Sn','W-Au','Au','W-Pd','Pd','_In','W-Fe','_Ni','Ni','Pt','W-Pt', 'W-N','O','Zn','Ag','Ru','B','Zr','Ce','Bi','W','Sb','Te', 'Cu', '_Cu', 'Rh','_Sn', 'positive','pH','El_conc','methanol','ethanol','H2SO4','HClO4','KOH','NaOH','Hg/HgO','MMS','RHE','SCE', 'J__mA_cm', 'concentration', 'Ox_Onset']
        X = pd.DataFrame(0, index=range(1), columns=X_oxidation)
    
        X.at[0, 'pH'] = st.session_state.sel_pH
        X.at[0, 'El_conc'] = st.session_state.sel_El_conc
        X.at[0, 'concentration'] = st.session_state.sel_concentration
        X.at[0, 'J__mA_cm'] = 89.7958457641243
        X.at[0, 'Ox_Onset'] = 0.318632211538462
    
    
        if st.session_state.sel_option_analyte == 'Methanol' :
          X.at[0, 'methanol'] = 1
    
        if st.session_state.sel_option_analyte == 'Ethanol' :
          X.at[0, 'ethanol'] = 1
    
        if st.session_state.sel_selec_electrolyte == 'H2SO4' :
          X.at[0, 'H2SO4'] = 1
        if st.session_state.sel_selec_electrolyte == 'HClO4' :
          X.at[0, 'HClO4'] = 1
        if st.session_state.sel_selec_electrolyte == 'KOH' :
          X.at[0, 'KOH'] = 1
        if st.session_state.sel_selec_electrolyte == 'NaOH' :
          X.at[0, 'NaOH'] = 1
    
    
        if st.session_state.sel_option_reference == 'Hg/HgO' :
          X.at[0, 'Hg/HgO'] = 1
        if st.session_state.sel_option_reference == 'MMS' :
          X.at[0, 'MMS'] = 1
        if st.session_state.sel_option_reference == 'RHE' :
          X.at[0, 'RHE'] = 1
        if st.session_state.sel_option_reference == 'SCE' :
          X.at[0, 'SCE'] = 1
    
    
        if 'Sn' in st.session_state.selected_elements:
          X.at[0, 'W-Sn'] = 1
          X.at[0, '_Sn'] = 1
          X.at[0, 'positive'] = 1
        if 'Au' in st.session_state.selected_elements:
          X.at[0, 'W-Au'] = 1
        if 'Pd' in st.session_state.selected_elements:
          X.at[0, 'W-Pd'] = 1
        if 'Fe' in st.session_state.selected_elements:
          X.at[0, 'W-Fe'] = 1
        if 'Pt' in st.session_state.selected_elements:
          X.at[0, 'W-Pt'] = 1
        if 'N' in st.session_state.selected_elements:
          X.at[0, 'W-N'] = 1
        if 'Graphite' in st.session_state.selected_elements:
          X.at[0, 'W-graphite'] = 1
        if 'Ti' in st.session_state.selected_elements:
          X.at[0, 'positive'] = 1
        if 'In' in st.session_state.selected_elements:
          X.at[0, 'positive'] = 1
          X.at[0, '_In'] = 1
        if 'Ni' in st.session_state.selected_elements:
          X.at[0, 'positive'] = 1
          X.at[0, '_Ni'] = 1
    
        if 'Organic' in st.session_state.selected_material:
          X.at[0, 'Org'] = 1
        if 'Au' in st.session_state.selected_material:
          X.at[0, 'Au'] = 1
        if 'Pd' in st.session_state.selected_material:
          X.at[0, 'Pd'] = 1
        if 'Ni' in st.session_state.selected_material:
          X.at[0, 'Ni'] = 1
          X.at[0, '_Ni'] = 1
        if 'Pt' in st.session_state.selected_material:
          X.at[0, 'Pt'] = 1
        if 'O' in st.session_state.selected_material:
          X.at[0, 'O'] = 1
        if 'Ag' in st.session_state.selected_material:
          X.at[0, 'Ag'] = 1
        if 'Zn' in st.session_state.selected_material:
          X.at[0, 'Zn'] = 1
        if 'Ru' in st.session_state.selected_material:
          X.at[0, 'Ru'] = 1
        if 'B' in st.session_state.selected_material:
          X.at[0, 'B'] = 1
        if 'Zr' in st.session_state.selected_material:
          X.at[0, 'Zr'] = 1
        if 'Ce' in st.session_state.selected_material:
          X.at[0, 'Ce'] = 1
        if 'Bi' in st.session_state.selected_material:
          X.at[0, 'Bi'] = 1
        if 'W' in st.session_state.selected_material:
          X.at[0, 'W'] = 1
        if 'Sb' in st.session_state.selected_material:
          X.at[0, 'Sb'] = 1
        if 'Te' in st.session_state.selected_material:
          X.at[0, 'Te'] = 1
        if 'Cu' in st.session_state.selected_material:
          X.at[0, 'Cu'] = 1
        if 'Rh' in st.session_state.selected_material:
          X.at[0, 'Rh'] = 1
        if 'Si' in st.session_state.selected_material:
          X.at[0, 'positive'] = 1
        if 'Fe' in st.session_state.selected_material:
          X.at[0, 'positive'] = 1
        if 'La' in st.session_state.selected_material:
          X.at[0, 'positive'] = 1
        if 'Sn' in st.session_state.selected_material:
          X.at[0, 'positive'] = 1
          X.at[0, '_Sn'] = 1
        if 'In' in st.session_state.selected_material:
          X.at[0, '_In'] = 1
    
        if 'Other' in st.session_state.selected_material:
          X.at[0, 'carbons'] = 1
        if 'Polymer' in st.session_state.selected_material:
          X.at[0, 'carbons'] = 1
        if 'Graphene (G)' in st.session_state.selected_material:
          X.at[0, 'carbons'] = 1
        if 'Carbon nanotube (CNT)' in st.session_state.selected_material:
          X.at[0, 'carbons'] = 1
        if 'Organic' in st.session_state.selected_material:
          X.at[0, 'carbons'] = 1
    
        if 'Other' in st.session_state.selected_material:
          X.at[0, 'C'] = 1
        if 'Other' in st.session_state.selected_elements:
          X.at[0, 'W-C'] = 1
    
        if 'Other' in st.session_state.selected_elements:
          X.at[0, 'W-carbons'] = 1
        if 'Graphene (G)' in st.session_state.selected_elements:
          X.at[0, 'W-carbons'] = 1
        if 'Graphene Oxide (GO) (G)' in st.session_state.selected_elements:
          X.at[0, 'W-carbons'] = 1
        if 'Graphene Oxide Reduced (RGO)' in st.session_state.selected_elements:
          X.at[0, 'W-carbons'] = 1
        if 'Polymer' in st.session_state.selected_elements:
          X.at[0, 'W-carbons'] = 1
    
        with open('model_oxidation_1.pkl', 'rb') as file:
          model_oxidation_1 = pickle.load(file)
    
        with open('model_oxidation_2.pkl', 'rb') as file:
          model_oxidation_2 = pickle.load(file)
    
        with open('model_oxidation_3.pkl', 'rb') as file:
          model_oxidation_3 = pickle.load(file)
    
        with open('model_oxidation_4.pkl', 'rb') as file:
          model_oxidation_4 = pickle.load(file)
    
        prediction = X
